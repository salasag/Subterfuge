{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isRefObject(value) {\n  return value != null && typeof value.current !== \"undefined\";\n}\nexport function isRefCallback(value) {\n  return typeof value === \"function\";\n}\nexport function getRef(ref) {\n  if (ref && ref.current) {\n    return ref.current;\n  }\n\n  return ref;\n}","map":{"version":3,"sources":["../../../src/common/refs.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAuBA,OAAM,SAAU,WAAV,CAA6C,KAA7C,EAA8E;AAChF,SAAO,KAAK,IAAI,IAAT,IAAiB,OAAQ,KAAuB,CAAC,OAAhC,KAA4C,WAApE;AACH;AAID,OAAM,SAAU,aAAV,CAA+C,KAA/C,EAAyE;AAC3E,SAAO,OAAO,KAAP,KAAiB,UAAxB;AACH;AAED,OAAM,SAAU,MAAV,CAAkC,GAAlC,EAAwD;AAC1D,MAAI,GAAG,IAAK,GAAqB,CAAC,OAAlC,EAA2C;AACvC,WAAQ,GAAqB,CAAC,OAA9B;AACH;;AAED,SAAO,GAAP;AACH","sourceRoot":"","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isRefObject(value) {\n    return value != null && typeof value.current !== \"undefined\";\n}\nexport function isRefCallback(value) {\n    return typeof value === \"function\";\n}\nexport function getRef(ref) {\n    if (ref && ref.current) {\n        return ref.current;\n    }\n    return ref;\n}\n//# sourceMappingURL=refs.js.map"]},"metadata":{},"sourceType":"module"}
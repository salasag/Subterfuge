{"ast":null,"code":"/* !\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\n/**\n * A stateful wrapper around the low-level <input> component which works around a\n * [React bug](https://github.com/facebook/react/issues/3926). This bug is reproduced when an input\n * receives CompositionEvents (for example, through IME composition) and has its value prop updated\n * asychronously. This might happen if a component chooses to do async validation of a value\n * returned by the input's `onChange` callback.\n *\n * Implementation adapted from https://jsfiddle.net/m792qtys/ (linked in the above issue thread).\n *\n * Note: this component does not apply any Blueprint-specific styling.\n */\n\nvar AsyncControllableInput =\n/** @class */\nfunction (_super) {\n  __extends(AsyncControllableInput, _super);\n\n  function AsyncControllableInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      externalValue: _this.props.value,\n      isComposing: false,\n      localValue: _this.props.value\n    };\n\n    _this.handleCompositionStart = function (e) {\n      var _a, _b;\n\n      _this.setState({\n        isComposing: true,\n        // Make sure that localValue matches externalValue, in case externalValue\n        // has changed since the last onChange event.\n        localValue: _this.state.externalValue\n      });\n\n      (_b = (_a = _this.props).onCompositionStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    };\n\n    _this.handleCompositionEnd = function (e) {\n      var _a, _b;\n\n      _this.setState({\n        isComposing: false\n      });\n\n      (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    };\n\n    _this.handleChange = function (e) {\n      var _a, _b;\n\n      var value = e.target.value;\n\n      _this.setState({\n        localValue: value\n      });\n\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    };\n\n    return _this;\n  }\n\n  AsyncControllableInput.getDerivedStateFromProps = function (_a) {\n    var value = _a.value;\n    return {\n      externalValue: value\n    };\n  };\n\n  AsyncControllableInput.prototype.render = function () {\n    var _a = this.state,\n        isComposing = _a.isComposing,\n        externalValue = _a.externalValue,\n        localValue = _a.localValue;\n\n    var _b = this.props,\n        inputRef = _b.inputRef,\n        restProps = __rest(_b, [\"inputRef\"]);\n\n    return React.createElement(\"input\", __assign({}, restProps, {\n      ref: inputRef,\n      value: isComposing ? localValue : externalValue,\n      onCompositionStart: this.handleCompositionStart,\n      onCompositionEnd: this.handleCompositionEnd,\n      onChange: this.handleChange\n    }));\n  };\n\n  AsyncControllableInput = __decorate([polyfill], AsyncControllableInput);\n  return AsyncControllableInput;\n}(React.PureComponent);\n\nexport { AsyncControllableInput };","map":{"version":3,"sources":["../../../../src/components/forms/asyncControllableInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* !\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\n/**\n * A stateful wrapper around the low-level <input> component which works around a\n * [React bug](https://github.com/facebook/react/issues/3926). This bug is reproduced when an input\n * receives CompositionEvents (for example, through IME composition) and has its value prop updated\n * asychronously. This might happen if a component chooses to do async validation of a value\n * returned by the input's `onChange` callback.\n *\n * Implementation adapted from https://jsfiddle.net/m792qtys/ (linked in the above issue thread).\n *\n * Note: this component does not apply any Blueprint-specific styling.\n */\nvar AsyncControllableInput = /** @class */ (function (_super) {\n    __extends(AsyncControllableInput, _super);\n    function AsyncControllableInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            externalValue: _this.props.value,\n            isComposing: false,\n            localValue: _this.props.value,\n        };\n        _this.handleCompositionStart = function (e) {\n            var _a, _b;\n            _this.setState({\n                isComposing: true,\n                // Make sure that localValue matches externalValue, in case externalValue\n                // has changed since the last onChange event.\n                localValue: _this.state.externalValue,\n            });\n            (_b = (_a = _this.props).onCompositionStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        _this.handleCompositionEnd = function (e) {\n            var _a, _b;\n            _this.setState({ isComposing: false });\n            (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        _this.handleChange = function (e) {\n            var _a, _b;\n            var value = e.target.value;\n            _this.setState({ localValue: value });\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        };\n        return _this;\n    }\n    AsyncControllableInput.getDerivedStateFromProps = function (_a) {\n        var value = _a.value;\n        return {\n            externalValue: value,\n        };\n    };\n    AsyncControllableInput.prototype.render = function () {\n        var _a = this.state, isComposing = _a.isComposing, externalValue = _a.externalValue, localValue = _a.localValue;\n        var _b = this.props, inputRef = _b.inputRef, restProps = __rest(_b, [\"inputRef\"]);\n        return (React.createElement(\"input\", __assign({}, restProps, { ref: inputRef, value: isComposing ? localValue : externalValue, onCompositionStart: this.handleCompositionStart, onCompositionEnd: this.handleCompositionEnd, onChange: this.handleChange })));\n    };\n    AsyncControllableInput = __decorate([\n        polyfill\n    ], AsyncControllableInput);\n    return AsyncControllableInput;\n}(React.PureComponent));\nexport { AsyncControllableInput };\n//# sourceMappingURL=asyncControllableInput.js.map"]},"metadata":{},"sourceType":"module"}